#!/sbin/sh
# AnyKernel2 Backend
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIP="$3";
DIR=`dirname "$ZIP"`;

ui_print() {
  until [ ! "$1" ]; do
    echo -e "ui_print $1\nui_print" > $OUTFD;
    shift;
  done;
}
show_progress() { echo "progress $1 $2" > $OUTFD; }
set_perm_recursive() {
  dirs=$(echo $* | $bb awk '{ print substr($0, index($0,$5)) }');
  for i in $dirs; do
    chown -R $1.$2 $i; chown -R $1:$2 $i;
    find "$i" -type d -exec chmod $3 {} +;
    find "$i" -type f -exec chmod $4 {} +;
  done;
}
## Acsii Art/Text has a Max width of 53 chars ##
##       "12345678901234567890123456789012345678901234567890123"; Max Width##
ui_print "_____   __    ______        ______            ";
ui_print "___  | / /_______  /_____  ____  /_____ _     ";
ui_print "__   |/ /_  _ \_  __ \  / / /_  /_  __ \`/     ";
ui_print "_  /|  / /  __/  /_/ / /_/ /_  / / /_/ /      ";
ui_print "/_/ |_/  \___//_.___/\__,_/ /_/  \__,_/       ";
ui_print "                                              ";
ui_print "____________       ___________                ";
ui_print "__  ___/_  /__________(_)__  /______________  ";
ui_print "_____ \_  __/_  ___/_  /__  //_/  _ \_  ___/  ";
ui_print "____/ // /_ _  /   _  / _  ,<  /  __/(__  )   ";
ui_print "/____/ \__/ /_/    /_/  /_/|_| \___//____/    ";
ui_print "                                              ";
ui_print "           _______               _____        ";
ui_print "           ___    |______ ______ ___(_)______ ";
ui_print "           __  /| |_  __ \`/  __ \`/_  /__  __ \ ";
ui_print "           _  ___ |  /_/ // /_/ /_  / _  / / /";
ui_print "           /_/  |_|\__, / \__,_/ /_/  /_/ /_/ ";
ui_print "                  /____/                      ";


file_getprop() { grep "^$2" "$1" | cut -d= -f2; }
getprop() { test -e /sbin/getprop && /sbin/getprop $1 || file_getprop /default.prop $1; }
abort() { ui_print "$*"; umount /system; umount /data; exit 1; }

show_progress 1.34 4;
ui_print " ";
mkdir -p /tmp/anykernel/bin;
cd /tmp/anykernel;
unzip -o "$ZIP";
if [ $? != 0 -o -z "$(ls /tmp/anykernel/tools)" ]; then
  abort "Unzip failed. Aborting...";
fi;
chmod -R 755 /tmp/anykernel/tools /tmp/anykernel/bin;
bb=/tmp/anykernel/tools/busybox;

ui_print "$(file_getprop /tmp/anykernel/anykernel.sh kernel.string)";
ui_print " ";
ui_print "AnyKernel2 by osm0sis @ xda-developers";
ui_print " ";
umount /system;
mount -o ro -t auto /system;
mount /data;
test -f /system/system/build.prop && root=/system;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.devicecheck)" == 1 ]; then
  ui_print "Checking device...";
  for i in 1 2 3 4 5; do
    testname="$(file_getprop /tmp/anykernel/anykernel.sh device.name$i)";
    if [ "$(getprop ro.product.device)" == "$testname" -o "$(getprop ro.build.product)" == "$testname" ]; then
      ui_print "$testname";
      match=1;
    fi;
  done;
  ui_print " ";
  if [ "$match" != 1 ]; then
  ui_print "Your Device: $testname is not supported."
  ui_print "Report to Author that your device is a $testname ..."
    abort "Unsupported device. Aborting...";
  fi;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.initd)" == 1 ]; then
  ui_print "Creating init.d...";
  ui_print " ";
  mount -o rw,remount -t auto /system;
  mkdir $root/system/etc/init.d;
  set_perm_recursive 0 0 0755 0755 $root/system/etc/init.d;
  mount -o ro,remount -t auto /system;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.pnpmgr)" == 1 ]; then
 	 		ui_print "[PNPMGR] Rename for backup...";
  		ui_print " ";
 		 	mount -o remount,rw -t auto /system;
  			if [ -e /system/bin/pnpmgr ]; then
  				mv /system/bin/pnpmgr /system/bin/pnpmgr.bak;
  				ui_print "[PNPMGR] Renamed system/bin/pnpmgr";
  			else
  				ui_print "[PNPMGR] pnpmgr: Already Backed up..";
  			fi;  	
  			if [ -e /system/etc/pnp.xml ]; then
  				mv /system/etc/pnp.xml /system/etc/pnp.xml.bak;
  				ui_print "[PNPMGR] Renamed system/bin/pnp.xml";
  			else
  				ui_print "[PNPMGR] pnp.xml: Already Backed up..";
  			fi;
  		mount -o remount,ro -t auto /system;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.pnpmgr)" == 2 ]; then
 	 		ui_print "[PNPMGR] Fix For Standard Edition..";
  		ui_print " ";
 		 	mount -o remount,rw -t auto /system;
  			if [ -e /system/bin/pnpmgr.bak ]; then
  				mv /system/bin/pnpmgr.bak /system/bin/pnpmgr;
  				ui_print "[PNPMGR] Renamed system/bin/pnpmgr.bak";
  			else
  				ui_print "[PNPMGR] pnpmgr: Already Fixed..";
  			fi;  	
  			if [ -e /system/etc/pnp.xml.bak ]; then
  				mv /system/etc/pnp.xml.bak /system/etc/pnp.xml;
  				ui_print "[PNPMGR] Renamed system/bin/pnp.xml.bak";
  			else
  				ui_print "[PNPMGR] pnp.xml: Already Fixed..";
  			fi;
  		mount -o remount,ro -t auto /system;
fi;

ui_print "[Nebula] Installing Kernel, Please wait...";
for i in $($bb --list); do
  $bb ln -s $bb /tmp/anykernel/bin/$i;
done;
if [ $? != 0 -o -z "$(ls /tmp/anykernel/bin)" ]; then
  abort "Recovery busybox setup failed. Aborting...";
fi;
PATH="/tmp/anykernel/bin:$PATH" $bb ash /tmp/anykernel/anykernel.sh $2;
if [ $? != "0" ]; then
  abort;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.modules)" == 1 ]; then
  ui_print " ";
  ui_print "Pushing modules...";
  mount -o rw,remount -t auto /system;
  cp -rf /tmp/anykernel/modules/* $root/system/lib/modules/;
  set_perm_recursive 0 0 0755 0644 $root/system/lib/modules;
  mount -o ro,remount -t auto /system;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.eas_support)" == 1 ]; then
		ui_print "[Nebula] EAS Support: Rom Detection in progress,";
		ui_print "[Nebula] Please Wait.."
			ui_print " ";
			mount -o remount,rw -t auto /system;
				if [ -e /system/etc/init.qcom.post_boot.sh ]; then
					ui_print "[EAS] Disable: init.qcom.post_boot.sh ";
					mv /system/etc/init.qcom.post_boot.sh init.qcom.post_boot.sh.bak;
				fi
					if grep -qi  'htc_pmewl-user\|htc_pmeuhl-user\|htc_pmewhl-user' /system/build.prop; then
						ui_print "[EAS] Stock Based Rom Detected: ";
						cp -rf /tmp/anykernel/system/* /system/;
						chmod 0644 /system/lib/libcutils.so;
						chmod 0644 /system/lib64/libcutils.so;
						chmod 0755 /system/bin/init.foreground.sh;
						chmod 0755 /system/bin/init.nebula.sh;
#						chmod 0755 /system/etc/init.d/99schedboost;
					else
						ui_print "[EAS] LOS Based Rom Detected: "
						cp -f /tmp/anykernel/system/bin/init.nebula.sh /system/bin/;
						cp -f /tmp/anykernel/system/bin/init.foreground.sh /system/bin/;
				 fi
		chmod 0755 /system/bin/init.foreground.sh;
		chmod 0755 /system/bin/init.nebula.sh;					
		mount -o remount,ro -t auto /system;		
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.boost_scripts)" == 1 ]; then
ui_print "[Nebula] Pushing Boot Scripts...";
  ui_print " ";
  mount -o remount,rw -t auto /system;
  rm /system/etc/init.d/nebulix-post_boot.sh;
  rm /system/su.d/nebulix-post_boot.sh;  
  if [ -d "$system/su.d" ]
  then  
    cp -rf /tmp/anykernel/system/su.d/* /system/su.d/;
    set_perm_recursive 0 0 0755 0755 /system/su.d;
  else
    mkdir /system/su.d;
    cp -rf /tmp/anykernel/system/su.d/* /system/su.d/;
    set_perm_recursive 0 0 0755 0755 /system/su.d;
  fi;
	  mount -o remount,ro -t auto /system;
fi;


if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.system_blobs)" == 1 ]; then
ui_print "[Nebula] Pushing System Blobs...";
	ui_print " ";
	mount -o remount,rw -t auto /system;
		cp -rf /tmp/anykernel/system/lib/* /system/lib/;
		cp -rf /tmp/anykernel/system/lib/hw/* /system/lib/hw/;
		cp -rf /tmp/anykernel/system/lib64/* /system/lib64/;
		cp -rf /tmp/anykernel/system/lib64/hw/* /system/lib64/hw/;
		set_perm_recursive 0 0 0755 0755 /system/lib;
		set_perm_recursive 0 0 0755 0755 /system/lib/hw;
		set_perm_recursive 0 0 0755 0755 /system/lib64;
		set_perm_recursive 0 0 0755 0755 /system/lib64/hw;
		mount -o remount,ro -t auto /system;		
fi;


if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanup)" == 1 ]; then
ui_print "[Nebula] Cleaning up...";
  rm -rf /tmp/anykernel;
fi;

umount /system;
umount /data;
ui_print "                     _\|/_                     ";
ui_print "                     (o o)                     ";
ui_print "+-----------------oOO-(_)-OOo-----------------+";
ui_print "|         Device: HTC10                       |";
ui_print "|         Kernel: Advanced Edition            |";
ui_print "|         Update: 02/01/2017                  |";
ui_print "|                                             |";
ui_print "|     Developed By,                           |";
ui_print "|              XDA: Eliminater74              |";
ui_print "|       E-mail: eliminater74@gmail.com        |";
ui_print "+---------------------------------------------+";
ui_print "                    (_| |_)                    ";
