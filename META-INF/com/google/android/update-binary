#!/sbin/sh
# AnyKernel2 Backend
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIPFILE="$3";
DIR=`dirname "$ZIPFILE"`;

ui_print() {
  until [ ! "$1" ]; do
    echo -e "ui_print $1\nui_print" > $OUTFD;
    shift;
  done;
}
show_progress() { echo "progress $1 $2" > $OUTFD; }

set_perm_recursive() {
  dirs=$(echo $* | $bb awk '{ print substr($0, index($0,$5)) }');
  for i in $dirs; do
    $bb chown -R $1:$2 $i;
    $bb find "$i" -type d -exec chmod $3 {} +;
    $bb find "$i" -type f -exec chmod $4 {} +;
  done;
}

## AnyKernel methods (DO NOT CHANGE)
# import patching functions/variables - see for reference
#. /tmp/anykernel/tools/ak2-core.sh;
sleep 1
show_progress 1.34 4;
## Acsii Art/Text has a Max width of 53 chars ##
##       "12345678901234567890123456789012345678901234567890123"; Max Width##

ui_print " ____     ___  ____   __ __  _       ____      ";
ui_print "|    \   /  _]|    \ |  |  || |     /    |     ";
ui_print "|  _  | /  [_ |  o  )|  |  || |    |  o  |     ";
ui_print "|  |  ||    _]|     ||  |  || |___ |     |     ";
ui_print "|  |  ||   [_ |  O  ||  :  ||     ||  _  | __  ";
ui_print "|  |  ||     ||     ||     ||     ||  |  ||  | ";
ui_print "|__|__||_____||_____| \__,_||_____||__|__||_ | ";
ui_print "                                            \| ";
ui_print "  ___   ____     ___   ___                     ";
ui_print " /   \ |    \   /  _] /   \                    ";
ui_print "|     ||  D  ) /  [_ |     |                   ";
ui_print "|  O  ||    / |    _]|  O  |                   ";
ui_print "|     ||    \ |   [_ |     |                   ";
ui_print "|     ||  .  \|     ||     |                   ";
ui_print " \___/ |__|\_||_____| \___/                    ";
ui_print "                                               ";
ui_print "   ___  ___    ____  ______  ____  ___   ____  ";
ui_print "  /  _]|   \  |    ||      ||    |/   \ |    \ ";
ui_print " /  [_ |    \  |  | |      | |  ||     ||  _  |";
ui_print "|    _]|  D  | |  | |_|  |_| |  ||  O  ||  |  |";
ui_print "|   [_ |     | |  |   |  |   |  ||     ||  |  |";
ui_print "|     ||     | |  |   |  |   |  ||     ||  |  |";
ui_print "|_____||_____||____|  |__|  |____|\___/ |__|__|";
ui_print "                                               ";
ui_print "-----------------------------------------------";
sleep 3
show_progress 1.34 2;
ui_print "-----------------------------------------------";
ui_print "| Installing Nebula Kernel,                   |";
ui_print "|          Oreo Edition Only..                |";
ui_print "-----------------------------------------------";
sleep 0.25
show_progress 1.38 4;

file_getprop() { grep "^$2=" "$1" | cut -d= -f2; }
if [ ! "$(getprop 2>/dev/null)" ]; then
  getprop() {
    local propval="$(file_getprop /default.prop $1 2>/dev/null)";
    test "$propval" || local propval="$(file_getprop $root/system/build.prop $1 2>/dev/null)";
    test "$propval" && echo "$propval" || echo "";
  }
fi;

cleanup() { rm -rf /tmp/anykernel; }
debugging() {
  case $(basename "$ZIPFILE" .zip) in
    *-debugging)
      ui_print " ";
      ui_print "Creating debugging archive in zip directory...";
      $bb tar -czvf "$DIR/anykernel2-$(date +%Y-%m-%d_%H%M%S)-debug.tgz" /tmp/*;
    ;;
  esac;
}
unmount_all() {
  (umount /system;
  if [ -d /system_root -a ! -f /system/build.prop ]; then
    umount /system_root;
  fi;
  umount /system;
  umount /vendor;
  umount /data) 2>/dev/null;
}
abort() {
  ui_print "$*";
  debugging;
  if [ ! -f /tmp/anykernel/anykernel.sh -o "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanuponabort 2>/dev/null)" == 1 ]; then
    cleanup;
  fi;
  unmount_all;
  exit 1;
}

show_progress 1.34 4;
ui_print " ";
cleanup;
mkdir -p /tmp/anykernel/bin;
cd /tmp/anykernel;
unzip -o "$ZIPFILE";
if [ $? != 0 -o -z "$(ls /tmp/anykernel/tools)" ]; then
  abort "Unzip failed. Aborting...";
fi;
bb=/tmp/anykernel/tools/busybox;
chmod 755 $bb;
$bb chmod -R 755 /tmp/anykernel/tools /tmp/anykernel/bin;

if [ -f /tmp/anykernel/banner ]; then
  while IFS='' read -r line || $bb [[ -n "$line" ]]; do
    ui_print "$line";
  done < /tmp/anykernel/banner;
  ui_print " ";
  ui_print " ";
fi;

ui_print "$(file_getprop /tmp/anykernel/anykernel.sh kernel.string)";
if [ -f /tmp/anykernel/version ]; then
  ui_print " ";
  while IFS='' read -r line || $bb [[ -n "$line" ]]; do
    ui_print "$line";
  done < /tmp/anykernel/version;
  ui_print " ";
fi;
ui_print " ";
ui_print "AnyKernel2 by osm0sis @ xda-developers";
ui_print " ";
ui_print " ";

unmount_all;
mount -o ro -t auto /system;
mount -o ro -t auto /vendor 2>/dev/null;
mount /data 2>/dev/null;
test -f /system/system/build.prop && root=/system;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.devicecheck)" == 1 ]; then
  ui_print "Checking device...";
  device="$(getprop ro.product.device)";
  product="$(getprop ro.build.product)";
  for i in 1 2 3 4 5; do
    testname="$(file_getprop /tmp/anykernel/anykernel.sh device.name$i)";
    test "$testname" || break;
    if [ "$device" == "$testname" -o "$product" == "$testname" ]; then
      ui_print "$testname";
      match=1;
      break;
    fi;
  done;
  ui_print " ";
  if [ "$match" != 1 ]; then
    ui_print "Your Device: $testname is not supported."
    ui_print "Report to Author that your device is a $testname ..."
    abort "Unsupported device. Aborting...";
  fi;
fi;

if [ -f /system/system/build.prop ]; then
  umount /system;
  umount /system 2>/dev/null;
  mkdir /system_root 2>/dev/null;
  mount -o ro -t auto /dev/block/bootdevice/by-name/system /system_root;
  mount -o bind /system_root/system /system;
  unset root;
fi;
savedpath="$LD_LIBRARY_PATH";
savedpre="$LD_PRELOAD";
unset LD_LIBRARY_PATH;
unset LD_PRELOAD;

### DO initd ####
if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.initd)" == 1 ]; then
  ui_print "Creating init.d...";
  ui_print " ";
  mount -o rw,remount -t auto /system;
  mkdir $root/system/etc/init.d;
  set_perm_recursive 0 0 0755 0755 $root/system/etc/init.d;
  mount -o ro,remount -t auto /system;
fi;


### Main Kernel Patcher/Installer ###
ui_print "[Nebula] Installing Kernel, Please wait...";
for i in $($bb --list); do
  $bb ln -s $bb /tmp/anykernel/bin/$i;
done;
if [ $? != 0 -o -z "$(ls /tmp/anykernel/bin)" ]; then
  abort "Recovery busybox setup failed. Aborting...";
fi;
PATH="/tmp/anykernel/bin:$PATH" $bb ash /tmp/anykernel/anykernel.sh $2;
if [ $? != "0" ]; then
  abort;
fi;

show_progress 1.38 4;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.modules)" == 1 ]; then
  ui_print " ";
  ui_print "Pushing modules...";
  mount -o rw,remount -t auto /system;
  mount -o rw,remount -t auto /vendor 2>/dev/null;
  cd /tmp/anykernel/modules;
  for module in $(find . -name '*.ko'); do
    if [ ! -e /$module ]; then
      case $module in
        */vendor/*) mod=vendor;;
        *) mod=system;;
      esac;
    fi;
    mkdir -p $(dirname /$module);
    $bb cp -rLf $module /$module;
    $bb chown 0:0 /$module;
    $bb chmod 644 /$module;
    if [ "$mod" ]; then
      chcon "u:object_r:${mod}_file:s0" /$module;
    fi;
  done;
  cd /tmp/anykernel;
  mount -o ro,remount -t auto /system;
  mount -o ro,remount -t auto /vendor 2>/dev/null;
fi;

### EAS SUPPORT ###
if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.eas_support)" == 1 ]; then
        ui_print "[Nebula] EAS Support: Rom Detection in progress,";
        ui_print "[Nebula] Please Wait.."
            ui_print " ";
            mount -o remount,rw -t auto /system;
                if [ -e /system/etc/init.qcom.post_boot.sh ]; then
                    ui_print "[EAS] Disable: init.qcom.post_boot.sh ";
                    mv /system/etc/init.qcom.post_boot.sh init.qcom.post_boot.sh.bak;
                fi
                    if grep -qi  'htc_pmewl-user\|htc_pmeuhl-user\|htc_pmewhl-user' /system/build.prop; then
                        ui_print "[EAS] Stock Based Rom Detected: ";
                        cp -rf /tmp/anykernel/system/* /system/;
                        chmod 0644 /system/lib/libcutils.so;
                        chmod 0644 /system/lib64/libcutils.so;
                    else
                        ui_print "[EAS] LOS Based Rom Detected: "
                        cp -f /tmp/anykernel/system/bin/init.nebula.sh /system/bin/;
                        cp -f /tmp/anykernel/system/bin/init.foreground.sh /system/bin/;
                 fi
        chmod 0755 /system/bin/init.foreground.sh;
        chmod 0755 /system/bin/init.nebula.sh;                  
        mount -o remount,ro -t auto /system;        
fi;

### BOOT SCRIPTS SUPPORT ###
if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.boost_scripts)" == 1 ]; then
ui_print "[Nebula] Pushing Boot Scripts...";
  ui_print " ";
  mount -o remount,rw -t auto /system;
  rm /system/etc/init.d/nebulix-post_boot.sh;
  rm /system/su.d/nebulix-post_boot.sh;  
  if [ -d "$system/su.d" ]
  then  
    cp -rf /tmp/anykernel/system/su.d/* /system/su.d/;
    set_perm_recursive 0 0 0755 0755 /system/su.d;
  else
    mkdir /system/su.d;
    cp -rf /tmp/anykernel/system/su.d/* /system/su.d/;
    set_perm_recursive 0 0 0755 0755 /system/su.d;
  fi;
      mount -o remount,ro -t auto /system;
fi;

### SYSTEM BLOBS SUPPORT ###
if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.system_blobs)" == 1 ]; then
ui_print "[Nebula] Pushing System Blobs...";
    ui_print " ";
    mount -o remount,rw -t auto /system;
        cp -rf /tmp/anykernel/system/lib/* /system/lib/;
        cp -rf /tmp/anykernel/system/lib/hw/* /system/lib/hw/;
        cp -rf /tmp/anykernel/system/lib64/* /system/lib64/;
        cp -rf /tmp/anykernel/system/lib64/hw/* /system/lib64/hw/;
        set_perm_recursive 0 0 0755 0755 /system/lib;
        set_perm_recursive 0 0 0755 0755 /system/lib/hw;
        set_perm_recursive 0 0 0755 0755 /system/lib64;
        set_perm_recursive 0 0 0755 0755 /system/lib64/hw;
        mount -o remount,ro -t auto /system;        
fi;

debugging;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanup)" == 1 ]; then
    ui_print " ";
    ui_print "[Nebula] Cleaning up...";
  cleanup;
fi;

test "$savedpath" && export LD_LIBRARY_PATH="$savedpath";
test "$savedpre" && export LD_PRELOAD="$savedpre";

unmount_all;

ui_print " ";
## Acsii Art/Text has a Max width of 53 chars ##
##       "12345678901234567890123456789012345678901234567890123"; Max Width##
ui_print "                                                     ";
ui_print "              ___MMM___           |||                ";
ui_print " _____          (0-0)            (o o)         _____ ";
ui_print "( ___ )-----oOO--(_)--OOo----ooO--\ /--Ooo----( ___ )";
ui_print " |   |                                         |   | ";
ui_print " | / |            NebulaKernel                 | \ | ";
ui_print " | / |            Ver: 1.0.0                   | \ | ";
ui_print " | / |                                         | \ | ";
ui_print " | / |    Device:  LG G6, H870, H872, US997    | \ | ";
ui_print " | / |                                         | \ | ";
ui_print " | / |   Developed By,                         | \ | ";
ui_print " | / |                XDA: Eliminater74        | \ | ";
ui_print " |___|  E-mail: eliminater74@purefusionos.com  |___| ";
ui_print "(_____)---------------------------------------(_____)";
ui_print "                                                     ";
ui_print " ";
ui_print "Done!";
